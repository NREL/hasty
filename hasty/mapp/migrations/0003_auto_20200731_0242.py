# Generated by Django 3.0.7 on 2020-07-31 02:42
from django.db import migrations

from mapp.resources.migration_utils import generate_point_protos


def generate_haystack_point_types(apps, schema_editor):
    hv = "3.9.9"
    HaystackPointType = apps.get_model('mapp', 'HaystackPointType')
    HaystackMarkerTag = apps.get_model('mapp', 'HaystackMarkerTag')
    all_protos = generate_point_protos(hv, True)
    for proto in all_protos:
        hpt = HaystackPointType(haystack_tagset=proto)
        hpt.save()
        for tag in proto.split('-'):
            haystack_marker_model = HaystackMarkerTag.objects.filter(
                tag=tag, version__version=hv)
            if len(haystack_marker_model) == 1:
                hpt.tags.add(haystack_marker_model[0])
            elif len(haystack_marker_model) == 0:
                print(
                    f"Haystack tag: {tag} is not a marker tag in version {hv}")
                print(
                    f"A record for following proto will not be created: {proto}")
                hpt.delete()
                break
            else:
                print(f"Haystack tag: {tag} has multiple tags in version {hv}")
                print(
                    f"A record for following proto will not be created: {proto}")
                hpt.delete()
                break


class Migration(migrations.Migration):

    dependencies = [
        ('mapp', '0002_auto_20200731_0240'),
    ]

    operations = [
        migrations.RunPython(generate_haystack_point_types)
    ]
