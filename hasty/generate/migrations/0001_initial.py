# Generated by Django 3.0.7 on 2021-12-15 23:23

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     primary_key=True,
                     serialize=False)),
                ('name',
                 models.CharField(
                     max_length=150)),
                ('short_description',
                 models.CharField(
                     max_length=50,
                     null=True)),
                ('tagset',
                 models.CharField(
                     default=None,
                     max_length=200,
                     null=True)),
                ('brick_class',
                 models.CharField(
                     default=None,
                     max_length=100,
                     null=True)),
                ('object_id',
                 models.UUIDField(
                     null=True)),
                ('content_type',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     primary_key=True,
                     serialize=False)),
                ('name',
                 models.CharField(
                     max_length=150)),
                ('city',
                 models.CharField(
                     default=None,
                     max_length=50,
                     null=True)),
                ('state',
                 models.CharField(
                     choices=[
                         ('AK',
                          'Alaska'),
                         ('AL',
                          'Alabama'),
                         ('AR',
                          'Arkansas'),
                         ('AZ',
                          'Arizona'),
                         ('CA',
                          'California'),
                         ('CO',
                          'Colorado'),
                         ('CT',
                          'Connecticut'),
                         ('DC',
                          'District of Columbia'),
                         ('DE',
                          'Delaware'),
                         ('FL',
                          'Florida'),
                         ('GA',
                          'Georgia'),
                         ('HI',
                          'Hawaii'),
                         ('IA',
                          'Iowa'),
                         ('ID',
                          'Idaho'),
                         ('IL',
                          'Illinois'),
                         ('IN',
                          'Indiana'),
                         ('KS',
                          'Kansas'),
                         ('KY',
                          'Kentucky'),
                         ('LA',
                          'Louisiana'),
                         ('MA',
                          'Massachusetts'),
                         ('MD',
                          'Maryland'),
                         ('ME',
                          'Maine'),
                         ('MI',
                          'Michigan'),
                         ('MN',
                          'Minnesota'),
                         ('MO',
                          'Missouri'),
                         ('MS',
                          'Mississippi'),
                         ('MT',
                          'Montana'),
                         ('NC',
                          'North Carolina'),
                         ('ND',
                          'North Dakota'),
                         ('NE',
                          'Nebraska'),
                         ('NH',
                          'New Hampshire'),
                         ('NJ',
                          'New Jersey'),
                         ('NM',
                          'New Mexico'),
                         ('NV',
                          'Nevada'),
                         ('NY',
                          'New York'),
                         ('OH',
                          'Ohio'),
                         ('OK',
                          'Oklahoma'),
                         ('OR',
                          'Oregon'),
                         ('PA',
                          'Pennsylvania'),
                         ('PR',
                          'Puerto Rico'),
                         ('RI',
                          'Rhode Island'),
                         ('SC',
                          'South Carolina'),
                         ('SD',
                          'South Dakota'),
                         ('TN',
                          'Tennessee'),
                         ('TX',
                          'Texas'),
                         ('UT',
                          'Utah'),
                         ('VA',
                          'Virginia'),
                         ('VT',
                          'Vermont'),
                         ('WA',
                          'Washington'),
                         ('WI',
                          'Wisconsin'),
                         ('WV',
                          'West Virginia'),
                         ('WY',
                          'Wyoming')],
                     default=None,
                     max_length=2,
                     null=True)),
                ('zip',
                 models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CoolingCoil',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('44',
                          '2-stage DX cooling coil'),
                         ('56',
                          'Single Stage DX cooling coil'),
                         ('59',
                          'Modulating chilled water coil')],
                     default='44',
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='DischargeFan',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('4',
                          'On/off discharge fan'),
                         ('5',
                          'Variable speed discharge fan'),
                         ('48',
                          '2-speed discharge fan')],
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='ExhaustFan',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('10',
                          'On/off exhaust fan'),
                         ('11',
                          'Variable speed exhaust fan'),
                         ('49',
                          '2-speed exhaust fan')],
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='HeatingCoil',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('35',
                          'Modulating DX heating coil'),
                         ('37',
                          'Modulating electric heating coil'),
                         ('42',
                          'Modulating natural gas heating coil'),
                         ('43',
                          '2-stage DX heating coil'),
                         ('45',
                          '2-stage electric heating coil'),
                         ('46',
                          '2-stage natural gas heating coil'),
                         ('55',
                          'Single Stage DX heating coil'),
                         ('57',
                          'Modulating hot water coil'),
                         ('58',
                          'Modulating steam coil'),
                         ('60',
                          'Single stage electric heating coil'),
                         ('61',
                          'Single stage natural gas heating coil')],
                     default='61',
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='PreHeatCoil',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('35',
                          'Modulating DX heating coil'),
                         ('37',
                          'Modulating electric heating coil'),
                         ('42',
                          'Modulating natural gas heating coil'),
                         ('43',
                          '2-stage DX heating coil'),
                         ('45',
                          '2-stage electric heating coil'),
                         ('46',
                          '2-stage natural gas heating coil'),
                         ('55',
                          'Single Stage DX heating coil'),
                         ('57',
                          'Modulating hot water coil'),
                         ('58',
                          'Modulating steam coil'),
                         ('60',
                          'Single stage electric heating coil'),
                         ('61',
                          'Single stage natural gas heating coil')],
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='ReturnFan',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('7',
                          'On/off return fan'),
                         ('8',
                          'Variable speed return fan'),
                         ('50',
                          '2-speed return fan')],
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='SupplementaryHeatingCoil',
            fields=[
                ('component_ptr',
                 models.OneToOneField(
                     auto_created=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     parent_link=True,
                     primary_key=True,
                     serialize=False,
                     to='generate.Component')),
                ('lookup_id',
                 models.CharField(
                     blank=True,
                     choices=[
                         ('35',
                          'Modulating DX heating coil'),
                         ('37',
                          'Modulating electric heating coil'),
                         ('42',
                          'Modulating natural gas heating coil'),
                         ('43',
                          '2-stage DX heating coil'),
                         ('45',
                          '2-stage electric heating coil'),
                         ('46',
                          '2-stage natural gas heating coil'),
                         ('55',
                          'Single Stage DX heating coil'),
                         ('57',
                          'Modulating hot water coil'),
                         ('58',
                          'Modulating steam coil'),
                         ('60',
                          'Single stage electric heating coil'),
                         ('61',
                          'Single stage natural gas heating coil')],
                     max_length=100,
                     null=True)),
            ],
            bases=(
                'generate.component',
            ),
        ),
        migrations.CreateModel(
            name='ThermalZone',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     primary_key=True,
                     serialize=False)),
                ('name',
                 models.CharField(
                     max_length=50)),
                ('tagset',
                 models.CharField(
                     default=None,
                     max_length=200,
                     null=True)),
                ('brick_class',
                 models.CharField(
                     default=None,
                     max_length=100,
                     null=True)),
                ('object_id',
                 models.UUIDField(
                     null=True)),
                ('content_type',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='TerminalUnit',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     primary_key=True,
                     serialize=False)),
                ('name',
                 models.CharField(
                     max_length=150)),
                ('lookup_id',
                 models.CharField(
                     choices=[
                         ('1',
                          'VAV cooling only'),
                         ('2',
                          'VAV w/modulating hot-water reheat'),
                         ('3',
                          'VAV w/on-off elec reheat'),
                         ('4',
                          'VAV w/2-stage elec reheat'),
                         ('5',
                          'VAV w/modulating elec reheat'),
                         ('6',
                          'CAV terminal'),
                         ('None',
                          'None')],
                     max_length=50)),
                ('tagset',
                 models.CharField(
                     default=None,
                     max_length=200,
                     null=True)),
                ('brick_class',
                 models.CharField(
                     default=None,
                     max_length=100,
                     null=True)),
                ('object_id',
                 models.UUIDField(
                     null=True)),
                ('content_type',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.CASCADE,
                     to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     primary_key=True,
                     serialize=False)),
                ('name',
                 models.CharField(
                     max_length=50)),
                ('lookup_id',
                 models.CharField(
                     choices=[
                         ('1',
                          'point'),
                         ('2',
                          'sensor point'),
                         ('3',
                          'cmd point'),
                         ('4',
                          'sp point'),
                         ('5',
                          'param point'),
                         ('6',
                          'temp sensor point'),
                         ('7',
                          'air temp sensor point'),
                         ('8',
                          'discharge air temp sensor point'),
                         ('9',
                          'return air temp sensor point'),
                         ('10',
                          'exhaust air temp sensor point'),
                         ('11',
                          'mixed air temp sensor point'),
                         ('12',
                          'run cmd point'),
                         ('13',
                          'stage:1 cmd point'),
                         ('14',
                          'stage:2 cmd point'),
                         ('15',
                          'humidity sensor point'),
                         ('16',
                          'air humidity sensor point'),
                         ('17',
                          'return air humidity sensor point'),
                         ('18',
                          'outside air humidity sensor point'),
                         ('19',
                          'mixed air humidity sensor point'),
                         ('20',
                          'zone air temp sensor point'),
                         ('21',
                          'zone air humidity sensor point'),
                         ('22',
                          'temp sp point'),
                         ('23',
                          'air temp sp point'),
                         ('24',
                          'zone air temp sp point'),
                         ('25',
                          'humidity sp point'),
                         ('26',
                          'air humidity sp point'),
                         ('27',
                          'zone air humidity sp point'),
                         ('28',
                          'mixed air temp sp point'),
                         ('29',
                          'discharge air temp sp point'),
                         ('30',
                          'outside air temp sensor point'),
                         ('31',
                          'damper cmd point'),
                         ('32',
                          'outside damper cmd point'),
                         ('33',
                          'fan run cmd point'),
                         ('34',
                          'discharge fan run cmd point'),
                         ('35',
                          'flow sensor point'),
                         ('36',
                          'air flow sensor point'),
                         ('37',
                          'enable cmd point'),
                         ('38',
                          'status point'),
                         ('39',
                          'position cmd point'),
                         ('40',
                          'modulating damper cmd point'),
                         ('41',
                          'twoPosition damper cmd point'),
                         ('42',
                          'valve cmd point'),
                         ('43',
                          'modulating valve cmd point'),
                         ('44',
                          'twoPosition valve cmd point'),
                         ('45',
                          'damper sensor point'),
                         ('46',
                          'valve sensor point'),
                         ('47',
                          'discharge air flow sensor point'),
                         ('48',
                          'mixed air flow sensor point'),
                         ('49',
                          'exhaust air flow sensor point'),
                         ('50',
                          'outside air flow sensor point'),
                         ('51',
                          'return air flow sensor point'),
                         ('52',
                          'twoPosition cmd point'),
                         ('53',
                          'modulating cmd point'),
                         ('54',
                          'cooling zone air temp sp point'),
                         ('55',
                          'occ cooling zone air temp sp point'),
                         ('56',
                          'unocc cooling zone air temp sp point'),
                         ('57',
                          'standby cooling zone air temp sp point'),
                         ('58',
                          'heating zone air temp sp point'),
                         ('59',
                          'occ heating zone air temp sp point'),
                         ('60',
                          'unocc heating zone air temp sp point'),
                         ('61',
                          'standby heating zone air temp sp point'),
                         ('62',
                          'stage:N cmd point'),
                         ('63',
                          'modulating position cmd point'),
                         ('64',
                          'pressure sensor point'),
                         ('65',
                          'air pressure sensor point'),
                         ('66',
                          'discharge air pressure sensor point'),
                         ('67',
                          'return air pressure sensor point'),
                         ('68',
                          'speed cmd point'),
                         ('69',
                          'run sensor point'),
                         ('70',
                          float("nan"))],
                     max_length=100)),
                ('tagset',
                 models.CharField(
                     default=None,
                     max_length=200,
                     null=True)),
                ('brick_class',
                 models.CharField(
                     default=None,
                     max_length=100,
                     null=True)),
                ('object_id',
                 models.UUIDField()),
                ('content_type',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='AirHandler',
            fields=[
                ('id',
                 models.UUIDField(
                     default=uuid.uuid4,
                     primary_key=True,
                     serialize=False)),
                ('name',
                 models.CharField(
                     max_length=150)),
                ('tagset',
                 models.CharField(
                     default=None,
                     max_length=200,
                     null=True)),
                ('brick_class',
                 models.CharField(
                     default=None,
                     max_length=100,
                     null=True)),
                ('discharge_air_temperature_reset_strategy',
                 models.PositiveSmallIntegerField(
                     choices=[
                         (1,
                          'None'),
                         (2,
                          'Outdoor air temperature reset'),
                         (3,
                          'Return air temperature reset'),
                         (4,
                          'Zone Trim and Respond')],
                     default=1)),
                ('discharge_air_pressure_reset_strategy',
                 models.PositiveSmallIntegerField(
                     choices=[
                         (1,
                          'None'),
                         (2,
                          'Zone Trim and Respond'),
                         (3,
                          'Average of VAV damper position signals')],
                     default=1)),
                ('economizer_control_strategy',
                 models.PositiveSmallIntegerField(
                     choices=[
                         (1,
                          'None'),
                         (2,
                          'Fixed dry-bulb'),
                         (3,
                          'Fixed enthalpy'),
                         (4,
                          'Differential dry-bulb'),
                         (5,
                          'Differential enthalpy'),
                         (6,
                          'Fixed dry-bulb & differential dry-bulb'),
                         (7,
                          'Fixed enthalpy & fixed dry-bulb'),
                         (8,
                          'Differential enthalpy & fixed dry-bulb')],
                     default=1)),
                ('ventilation_control_strategy',
                 models.PositiveSmallIntegerField(
                     choices=[
                         (1,
                          'None'),
                         (2,
                          'Minimum design outside airflow control'),
                         (3,
                          'DCV with zone-level CO2 sensors'),
                         (4,
                          'DCV with central return sensor')],
                     default=2)),
                ('site_id',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     related_name='air_handlers',
                     to='generate.Site')),
            ],
        ),
    ]
